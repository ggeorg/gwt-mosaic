Index: src/com/google/gwt/gen2/table/client/SelectionGrid.java
===================================================================
--- src/com/google/gwt/gen2/table/client/SelectionGrid.java	(revision 1670)
+++ src/com/google/gwt/gen2/table/client/SelectionGrid.java	(working copy)
@@ -299,9 +299,6 @@
   @Override
   public void onBrowserEvent(Event event) {
     super.onBrowserEvent(event);
-    Element targetRow = null;
-    Element targetCell = null;
-
     switch (DOM.eventGetType(event)) {
       // Highlight the cell on mouse over
       case Event.ONMOUSEOVER:
@@ -335,64 +332,50 @@
         }
         break;
 
-      // Select a row on click
-      case Event.ONMOUSEDOWN: {
-        // Ignore if selection is disabled
-        if (!selectionEnabled) {
-          return;
-        }
-
-        // Get the target row
-        targetCell = getEventTargetCell(event);
-        if (targetCell == null) {
-          return;
-        }
-        targetRow = DOM.getParent(targetCell);
-        int targetRowIndex = getRowIndex(targetRow);
-
-        // Select the row
-        if (selectionPolicy == SelectionPolicy.MULTI_ROW) {
-          boolean shiftKey = DOM.eventGetShiftKey(event);
-          boolean ctrlKey = DOM.eventGetCtrlKey(event)
-              || DOM.eventGetMetaKey(event);
+      // Prevent native inputs from being checked
+      case Event.ONCLICK:
+        onMouseClick(event);
+        break;
+    }
+  }
 
-          // Prevent default text selection
-          if (ctrlKey || shiftKey) {
-            event.preventDefault();
-          }
+  protected void onMouseClick(Event event) {
+    Element targetRow = null;
+    Element targetCell = null;
 
-          // Select the rows
-          selectRow(targetRowIndex, ctrlKey, shiftKey);
-        } else if (selectionPolicy == SelectionPolicy.ONE_ROW
-            || (selectionPolicy == SelectionPolicy.RADIO && targetCell == targetRow.getFirstChild())) {
-          selectRow(-1, targetRow, true, true);
-          lastSelectedRowIndex = targetRowIndex;
-        }
-      }
-        break;
+    // Ignore if selection is disabled
+    if (!selectionEnabled) {
+      return;
+    }
 
-      // Prevent native inputs from being checked
-      case Event.ONCLICK: {
-        // Ignore if selection is disabled
-        if (!selectionEnabled) {
-          return;
-        }
+    // Get the target row
+    targetCell = getEventTargetCell(event);
+    if (targetCell == null) {
+      return;
+    }
+    targetRow = DOM.getParent(targetCell);
+    int targetRowIndex = getRowIndex(targetRow);
 
-        // Get the target row
-        targetCell = getEventTargetCell(event);
-        if (targetCell == null) {
-          return;
-        }
-        targetRow = DOM.getParent(targetCell);
-        int targetRowIndex = getRowIndex(targetRow);
+    // Select the row
+    if (selectionPolicy == SelectionPolicy.MULTI_ROW) {
+      boolean shiftKey = DOM.eventGetShiftKey(event);
+      boolean ctrlKey = DOM.eventGetCtrlKey(event)
+          || DOM.eventGetMetaKey(event);
 
-        // Select the row
-        if (selectionPolicy == SelectionPolicy.CHECKBOX
-            && targetCell == targetRow.getFirstChild()) {
-          selectRow(targetRowIndex, true, DOM.eventGetShiftKey(event));
-        }
+      // Prevent default text selection
+      if (ctrlKey || shiftKey) {
+        event.preventDefault();
       }
-        break;
+
+      // Select the rows
+      selectRow(targetRowIndex, ctrlKey, shiftKey);
+    } else if (selectionPolicy == SelectionPolicy.ONE_ROW
+        || (selectionPolicy == SelectionPolicy.RADIO && targetCell == targetRow.getFirstChild())) {
+      selectRow(-1, targetRow, true, true);
+      lastSelectedRowIndex = targetRowIndex;
+    } else if (selectionPolicy == SelectionPolicy.CHECKBOX
+        && targetCell == targetRow.getFirstChild()) {
+      selectRow(targetRowIndex, true, DOM.eventGetShiftKey(event));
     }
   }
 
