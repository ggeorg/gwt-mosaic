<?xml version="1.0" encoding="UTF-8"?>

<!-- NOTE: Requires GWT_HOME environment variable set -->

<project name="gwt-mosaic" default="jar" basedir=".">

	<description>
		Ant Build File for GWT-MOSAIC
	</description>

	<property name="gwt.module" value="org.gwt.mosaic.showcase.Showcase" />
	<property name="source.path" value="src" />
	<property name="webapp.path" value="${source.path}/org/gwt/mosaic/showcase/public" />

	<!-- ant properties -->
	<property environment="env" />
	<property file="build.properties" />
	<property name="build" location="build" />
	<property name="dist" location="${build}/dist" />

	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.5" />
	<property name="source" value="1.5" />

	<!-- init - create needed dirs -->
	<target name="init">
		<tstamp />
		<mkdir dir="${build}/classes" />
		<mkdir dir="${build}/www" />
		<mkdir dir="${dist}/WEB-INF/classes" />
		<mkdir dir="${dist}/WEB-INF/lib" />
	</target>

	<!-- set classpath -->
	<path id="project.classpath">
		<pathelement location="${build}/classes" />
		<pathelement location="${env.GWT_HOME}/gwt-user.jar" />
		<pathelement location="${env.GWT_HOME}/${gwt.dev}.jar" />
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- gwt classpath for GWTCompiler (NOTE - must include source) -->
	<path id="gwt.classpath">
		<pathelement location="${source.path}" />
		<path refid="project.classpath" />
		<pathelement location="${env.GWT_HOME}/${gwt.dev}.jar" />
	</path>

	<!-- compile JAVA -->
	<target name="compile" depends="init" description="Compile src to build/classes">
		<!-- Capture the path as a delimited property using the refid attribute -->
		<property name="classpath" refid="project.classpath" />
		<!-- Emit the property to the ant console -->
		<echo>env.GWT_HOME=${env.GWT_HOME}</echo>
		<echo>---------------------------------</echo>
		<echo message="Classpath = ${classpath}" />
		<echo>---------------------------------</echo>
		<javac srcdir="${source.path}" destdir="${build}/classes" debug="on" debuglevel="${debuglevel}" source="${source}" target="${target}">
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<!-- compile GWT -->
	<target name="gwtcompile" description="Invoke the GWTCompiler against GWT Java source files">
		<!-- Capture the path as a delimited property using the refid attribute -->
		<property name="classpath" refid="gwt.classpath" />
		<!-- Emit the property to the ant console -->
		<echo>env.GWT_HOME=${env.GWT_HOME}</echo>
		<echo>---------------------------------</echo>
		<echo message="Classpath = ${classpath}" />
		<echo>---------------------------------</echo>
		<java classname="com.google.gwt.dev.GWTCompiler" failonerror="true" fork="true">
			<jvmarg line="-Xmx256m" />
			<arg line="-out ${build}/www" />
			<!-- arg line="-style PRETTY" / -->
			<!-- arg line="-style DETAILED" / -->
			<arg value="${gwt.module}" />
			<classpath refid="gwt.classpath" />
		</java>
	</target>

	<!-- ===================== -->
	<!--  create all packages  -->
	<!-- ===================== -->
	<target name="all" depends="init,jar,war" />

	<!-- ========================================================== -->
	<!--  create Module JAR (includes source and compiled classes)  -->
	<!-- ========================================================== -->
	<target name="jar" depends="init, compile" description="Package up the project as a jar - for use as distributed module">
		<jar destfile="${ant.project.name}-${project.version}.jar">
			<fileset dir="${build}/classes">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${source.path}">
				<include name="**" />
			</fileset>
		</jar>
	</target>

	<!-- ===================================== -->
	<!--  create WAR (sample web application)  -->
	<!-- ===================================== -->
	<target name="war" depends="distwar" description="Package up the dist directory as a war - using module name">
		<jar destfile="${ant.project.name}-${project.version}.war" basedir="${dist}" />
	</target>

	<!-- distwar -->
	<target name="distwar" depends="init,copyserver,copyclient,copylib,copyweb" description="Perform steps to create dist directory for war">
	</target>

	<!-- copy server classes -->
	<target name="copyserver" depends="init,compile" description="Copy javac output to dist/WEB-INF/classes">
		<copy todir="${dist}/WEB-INF/classes">
			<fileset dir="${build}/classes">
				<include name="**/*.class" />
			</fileset>
		</copy>
	</target>

	<!-- copy GWT client files -->
	<target name="copyclient" depends="init,gwtcompile" description="Copy GWT generated files to root of dist">
		<copy todir="${dist}">
			<fileset dir="${build}/www/${gwt.module}/" />
		</copy>
	</target>

	<!-- copy lib -->
	<target name="copylib" depends="init" description="Copy required libs to dist/WEB-INF/lib">
		<copy todir="${dist}/WEB-INF/lib">
			<fileset dir="lib">
				<include name="**/*.jar" />
				<exclude name="servlet-api-2.4.jar" />
			</fileset>
			<fileset dir="${env.GWT_HOME}">
				<include name="gwt-servlet.jar" />
			</fileset>
		</copy>
	</target>

	<!-- copy web -->
	<target name="copyweb" depends="init" description="Copy source webapp contents to dist">
		<copy todir="${dist}">
			<fileset dir="${webapp.path}" />
		</copy>
		<copy todir="${dist}/WEB-INF">
			<fileset dir="tomcat/webapps/ROOT/WEB-INF">
				<exclude name="web.xml" />
			</fileset>
		</copy>
	</target>

	<!-- ======= -->
	<!--  clean  -->
	<!-- ======= -->
	<target name="clean">
		<delete file="${ant.project.name}-${project.version}.jar" />
		<delete file="${ant.project.name}-showcase-${project.version}.war" />
		<delete dir="${build}" />
		<delete dir="${doc}" />
	</target>

</project>
