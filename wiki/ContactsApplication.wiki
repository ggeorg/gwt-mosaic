#summary Sample application using Application module and PageBus.

= Introduction =

The application we want to build is the Contacts application from [http://code.google.com/webtoolkit/doc/latest/tutorial/mvp-architecture.html Large scale application development and MVP]. Focus again is turned to decouple the view from the logic, this allows us to minimize our use of GWTTestCase and reduce the overall time spent running tests.

This application will allow users to view, edit, and add contacts to a list of contacts that are stored on the server.

http://gwt-mosaic.googlecode.com/svn/wiki/contacts.png

= Details =

The application structure in eclipse is:

http://gwt-mosaic.googlecode.com/svn/wiki/contacts-structure.png

The {{{Contact}}} and {{{ContactDetails}}} classes is our *Model*:

 * {{{Contact}}} class represents a contact within the contact list.
 * {{{ContactDetails}}} is a light version of {{{Contact}}} that will make the {{{Contact}}} list retrieval more efficient.

Both model classes in our application extend the {{{AbstractBean}}} and fire {{{PropertyChange}}} events. This feature is required by the GWT Beans Binding framework.

For example, bellow you'll see the {{{ContactDetails}}} class:

{{{
import java.io.Serializable;

import org.gwt.beansbinding.core.client.util.AbstractBean;

@SuppressWarnings("serial")
public class ContactDetails extends AbstractBean implements Serializable {
	private String id;
	private String displayName;

	public ContactDetails() {
		this("0", "");
	}

	public ContactDetails(String id, String displayName) {
		super();
		this.id = id;
		this.displayName = displayName;
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		String oldValue = this.id;
		this.id = id;
		firePropertyChange("id", oldValue, this.id);
	}

	public String getDisplayName() {
		return displayName;
	}

	public void setDisplayName(String displayName) {
		String oldValue = displayName;
		this.displayName = displayName;
		firePropertyChange("displayName", oldValue, this.displayName);
	}
}
}}}

The classes in the {{{org.gwt.mosaic.client.ui}}} package is our *View*.

 * {{{ContactsView}}} is used to show a list of all contacts
 * {{{EditContact}}} is used to add new contacts as well as editing existing contacts

The view classes are totally decoupled and communicate with the rest of the application with messages. They don't have to implement any specific interface, and if created with {{{GWT create}}} the view classes can be switch-able.

The {{{ContactsController}}} contains all the logic for our Contacts application. This class does not include any GWT UI elements and allows a non-GWTTestCase to be useful.

== Application module ==