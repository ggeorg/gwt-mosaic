#summary Hello World in GWT Mosaic 2g.
#sidebar TableOfContents

= Prerequisites =

 # You will need GWT-2.1.0.m3.zip; download it from [http://code.google.com/p/google-web-toolkit/downloads/list].
 # Add the latest gwt-mosaic-2.x.jar to your classpath and add {{{<inherits name="org.gwt.mosaic2g.Mosaic" />}}} into your gwt.xml module file.

= Details =

It's the classic hello world a la GWT Mosaic 2g:

http://gwt-mosaic.googlecode.com/svn/wiki/2g/hello-world.png

{{{
import org.gwt.mosaic2g.client.animator.AnimationClient;
import org.gwt.mosaic2g.client.animator.AnimationEngine;
import org.gwt.mosaic2g.client.scene.Scene;
import org.gwt.mosaic2g.client.scene.Segment;
import org.gwt.mosaic2g.client.scene.Show;
import org.gwt.mosaic2g.client.scene.control.Text;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.user.client.ui.RootLayoutPanel;

/**
 * Entry point classes define <code>onModuleLoad()</code>.
 */
public class Main implements EntryPoint {
	private final Scene scene = new Scene();

	/**
	 * This is the entry point method.
	 */
	public void onModuleLoad() {
		// Specify a GWT panel (here RootLayoutPanel) to render our scene graph.
		// Within the panel we add the scene. A scene is a top level area where
		// you can set the root node of a scene graph, which is always a show
		// node.
		RootLayoutPanel.get().add(scene);
		scene.setShow(createShow());

		// Create an AnimationEngine instance with all AnimationClient(s) it has
		// to manage (Scene implements the AnimationClient interface).
		final AnimationEngine animationEngine = new AnimationEngine(
				new AnimationClient[] { scene });
		// Start the animation engine.
		animationEngine.start();
	}

	private Show createShow() {
		// The show is the root node of out scene graph.
		Show show = new Show();

		// Create a text node and set its text property to "Hello World".
		Text text = new Text(show);
		text.setText("Hello World");
		// Declare a border for our text node.
		text.setBorder("10px solid green");

		// Add our text node to a segment node. A segment specifies which nodes
		// in a scene graph are active.
		Segment s = new Segment(show);
		s.add(text);

		// Exactly one segment can be active at any given time.
		show.activateSegment(s);

		// Return the root node (which is always a show node) of our scene
		// graph.
		return show;
	}

}
}}}