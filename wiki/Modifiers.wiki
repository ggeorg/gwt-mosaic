#summary One-sentence summary of this page.
#sidebar TableOfContents

= Introduction =

A modifier feature is a feature that has a child (which can be a group or features). A modifier will modify the display of its child features in some way.

= Details =

The basic set of modifiers are:
  * Clipped
  * Fade
  * Translator

== Translator ==

A translator moves the position of its children on the page by a relative delta-x and delta-y. The delta values can be animated over time, and smooth animations can be had with various tweening functions. Translators work on pre-computed values linked into a path by linear interpolation.

A translator is split into two piecces: the actual translator, and the translator model that holds the points.


<wiki:gadget url="http://mosaic.arkasoft.com/translator-wiki" height="256" width="512" border="2"/>

Example:

{{{
import org.gwt.mosaic2g.client.animator.AnimationClient;
import org.gwt.mosaic2g.client.animator.AnimationEngine;
import org.gwt.mosaic2g.client.scene.GrinFile;
import org.gwt.mosaic2g.client.scene.InterpolatedModelParser;
import org.gwt.mosaic2g.client.scene.Scene;
import org.gwt.mosaic2g.client.scene.Segment;
import org.gwt.mosaic2g.client.scene.Show;
import org.gwt.mosaic2g.client.scene.Translator;
import org.gwt.mosaic2g.client.scene.control.Box;

import com.google.gwt.core.client.EntryPoint;
import com.google.gwt.core.client.GWT;
import com.google.gwt.user.client.ui.RootLayoutPanel;

/**
 * Entry point classes define <code>onModuleLoad()</code>.
 */
public class Showcase implements EntryPoint {
	private final Scene scene = new Scene();

	/**
	 * This is the entry point method.
	 */
	public void onModuleLoad() {
		// Specify a GWT panel (here RootLayoutPanel) to render our scene graph.
		// Within the panel we add the scene. A scene is a top level area where
		// you can set the root node of a scene graph, which is always a show
		// node.
		RootLayoutPanel.get().add(scene);
		scene.setShow(createShow());

		// Create an AnimationEngine instance with all AnimationClient(s) it has
		// to manage (Scene implements the AnimationClient interface).
		final AnimationEngine animationEngine = new AnimationEngine(
				new AnimationClient[] { scene });
		// Start the animation engine.
		animationEngine.start();
	}

	private Show createShow() {
		Show show = new Show();
		
		Box box1 = new Box(show, 20, 20, 50, 50);
		box1.setBackground("orange");
		box1.setBorder("5px solid green");
		
		MyTranslatorModel tm = GWT.create(MyTranslatorModel.class);
		Translator translator = new Translator(show, tm.getModel());
		translator.setPart(box1);
		
		Segment segment = new Segment(show);
		segment.add(translator);
		
		show.activateSegment(segment);
		
		return show;
	}

	@GrinFile(value = "translator_model.txt")
	interface MyTranslatorModel extends InterpolatedModelParser {
	};
}}}

The translator model is declated in `translator_model.txt`:

{{{
translator_model {
	0		0		0		start
	25		200		0		linear-relative
	50		200		100		ease-out-back
	75		0		100		linear-relative
	100		0		0		ease-in-back
} repeat 0 ;
}}}